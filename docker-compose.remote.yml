version: '3.8'

services:
  # PostgreSQL database (for testing)
  postgres:
    image: postgres:15-alpine
    container_name: supabase-mcp-postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Supabase (optional - for full self-hosted setup)
  # You can uncomment this if you want to run a full Supabase stack
  # supabase:
  #   image: supabase/supabase:latest
  #   container_name: supabase-mcp-supabase
  #   restart: unless-stopped
  #   depends_on:
  #     postgres:
  #       condition: service_healthy
  #   environment:
  #     POSTGRES_HOST: postgres
  #     POSTGRES_PORT: 5432
  #     POSTGRES_USER: postgres
  #     POSTGRES_PASSWORD: postgres
  #     POSTGRES_DB: postgres
  #   ports:
  #     - "8000:8000"

  # Remote MCP Server
  mcp-server:
    build: .
    container_name: supabase-mcp-server
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      # Required environment variables
      SUPABASE_URL: ${SUPABASE_URL:-http://localhost:8000}
      SUPABASE_ANON_KEY: ${SUPABASE_ANON_KEY}
      
      # Optional environment variables
      SUPABASE_SERVICE_ROLE_KEY: ${SUPABASE_SERVICE_ROLE_KEY}
      DATABASE_URL: ${DATABASE_URL:-postgresql://postgres:postgres@postgres:5432/postgres}
      SUPABASE_AUTH_JWT_SECRET: ${SUPABASE_AUTH_JWT_SECRET}
      
      # Server configuration
      PORT: 3000
      NODE_ENV: production
      WORKSPACE_PATH: /app/workspace
    ports:
      - "3000:3000"
    volumes:
      # Mount a workspace directory for file operations
      - ./workspace:/app/workspace
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      start_period: 10s
      retries: 3

volumes:
  postgres_data:

# Example usage:
# 1. Create a .env file with your Supabase configuration:
#    SUPABASE_URL=http://localhost:8000
#    SUPABASE_ANON_KEY=your-anon-key
#    SUPABASE_SERVICE_ROLE_KEY=your-service-key
#    DATABASE_URL=postgresql://postgres:postgres@postgres:5432/postgres
#    SUPABASE_AUTH_JWT_SECRET=your-jwt-secret
#
# 2. Start the services:
#    docker-compose -f docker-compose.remote.yml up -d
#
# 3. Test the MCP server:
#    curl http://localhost:3000/health
#    curl -X POST http://localhost:3000/mcp -H "Content-Type: application/json" -d '{"jsonrpc":"2.0","id":1,"method":"tools/list"}'
